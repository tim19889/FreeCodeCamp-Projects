/*Instructions
-------------------------------------------
A prime number is a whole number greater than 1 with exactly two divisors: 1 and itself. For example, 2 is a prime number because it is only divisible by 1 and 2. 
In contrast, 4 is not prime since it is divisible by 1, 2 and 4.

Rewrite sumPrimes so it returns the sum of all prime numbers that are less than or equal to num.


sumPrimes(10) should return a number.
sumPrimes(10) should return 17.
sumPrimes(977) should return 73156.



Starting Code
--------------------------------------------
function sumPrimes(num) {
  return num;
}

sumPrimes(10);




Final Code
---------------------------------------------*/
function sumPrimes(num) {
  let count = 0; 
  let isComposite;

for (let i = 3; i <= num; i++) {
isComposite = "false";
for (let j = 2; j < i; j++) {
  if (i % j === 0) {
    isComposite = "true";
    break;
  }
}
if (isComposite === "false") {
  count += i;
}
}
return count + 2
}
sumPrimes(977);

/*Alternate Method
---------------------------------*/
function sumPrimes(num) {
  let count = 0;
  for (let i = 2; i <= num; i++) {
    let isPrime = true; 
for (let j = 0; j < 100; j++) {
  if (j !== i && j !== 1 && i % j === 0) {
  break;
}
if (j === 99 && isPrime === true) {
  count += i;
}
}
  }
  return count; 
}
console.log(sumPrimes(10));
