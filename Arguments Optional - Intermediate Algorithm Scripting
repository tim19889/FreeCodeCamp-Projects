/*Instructions 
-------------------------------
Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.

For example, addTogether(2, 3) should return 5, and addTogether(2) should return a function.

Calling this returned function with a single argument will then return the sum:

var sumTwoAnd = addTogether(2);
sumTwoAnd(3) returns 5.

If either argument isn't a valid number, return undefined.

addTogether(2, 3) should return 5.
Passed:addTogether(23, 30) should return 53.
Passed:addTogether(5)(7) should return 12.
Passed:addTogether("https://www.youtube.com/watch?v=dQw4w9WgXcQ") should return undefined.
Passed:addTogether(2, "3") should return undefined.
Passed:addTogether(2)([3]) should return undefined.
Passed:addTogether("2", 3) should return undefined.



Starting Code
-------------------------------
function addTogether() {
  return false;
}

addTogether(2,3);



Final Code
-------------------------------*/
function addTogether() {
  let y = arguments[0];
  if (arguments[1] === undefined && y === parseInt(y)) {
    return function(x){
      if (x === parseInt(x) && y === parseInt(y)) {
       return x + y; }
       else {return undefined}
    }
  }
else {
  if (arguments[0] === parseInt(arguments[0]) && arguments[1] === parseInt(arguments[1])) {
  return arguments[0] + arguments[1];
  }
  else {return undefined}
}
}
addTogether(5)(7);

/*Alternate Code
-----------------------------*/
function addTogether() {
  let a = arguments[0];
  let b = arguments[1]
  if (a === parseInt(a) && b === parseInt(b)) {
         return a + b;
       }
  if (arguments.length === 1 && a === parseInt(a)) {return function(c){
      if (c === parseInt(c)){
         b = c;
         return a + b
      }
     } 
  }
}
console.log(addTogether(5)(3));

