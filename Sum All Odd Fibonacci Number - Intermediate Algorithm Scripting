/*Instructions
-----------------------------------
Sum All Odd Fibonacci Numbers
Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. 
The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.

sumFibs(1) should return a number.
Passed:sumFibs(1000) should return 1785.
Passed:sumFibs(4000000) should return 4613732.
Passed:sumFibs(4) should return 5.
Passed:sumFibs(75024) should return 60696.
Passed:sumFibs(75025) should return 135721.


Starting Code
------------------------------------
function sumFibs(num) {
  return num;
}

sumFibs(4);



Final Code
-------------------------------------*/
function sumFibs(num) {
  let f = 0;
  let s = 1;
  let count = 0;
  
  while (s <= num) {
   [s, f] = [s+f, s];
    if (f % 2 !== 0) {
      count+= f
    }
  }
  return count;
}
console.log(sumFibs(75024));


/*Alternate Code
--------------------------------------*/
function sumFibs(num) {
  const numArr = [1,1];
  let counter = 0; 
  let sum = 0;
  for (let i = 0; i < num; i++) {
      counter = numArr[i] + numArr[i+1];
      numArr.push(counter);
      if (counter <= num && counter % 2 === 1) {
        sum+=counter;
      }
  }
  return sum+2;
}
console.log(sumFibs(75025));*/


/*Alternate Code
----------------------------------------*/

function sumFibs(num) {
  let count = 2;
  const fibNums = [1,1];
  for (let i = 0; i < fibNums.length; i++) {
    if (fibNums[i+1] <= num) {
      fibNums.push(fibNums[i] + fibNums[i+1])
    }
    if (fibNums[i+2] % 2 === 1 && fibNums[i+2] <= num) {
      count += fibNums[i+2];
    }
  }
  return count;
  }
sumFibs(1000);

